{
  "info": {
    "name": "Task Management System API",
    "description": "API collection for TaskFlow's Task Management System MVP.\n\nInstructions:\n- Set the `baseUrl` variable in your environment or collection (e.g., http://localhost:5168).\n- Use these requests to test all CRUD operations for tasks.\n\nVariables:\n- `baseUrl`: Base URL of the API.\n- `taskId`: ID of a task to test Get/Update/Delete.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5168"
    },
    {
      "key": "taskId",
      "value": "1"
    }
  ],
  "item": [
    {
      "name": "List All Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/tasks?page=1&pageSize=10&status=",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"],
          "query": [
            { "key": "page", "value": "1" },
            { "key": "pageSize", "value": "10" },
            { "key": "status", "value": "" }
          ]
        },
        "description": "Returns a paginated list of tasks.\n\nQuery parameters:\n- `page`: Page number (default 1)\n- `pageSize`: Number of items per page (default 10)\n- `status`: Filter by task status (optional)"
      }
    },
    {
      "name": "Get Task by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "{{taskId}}"]
        },
        "description": "Retrieves a single task by its ID.\n\nPath parameter:\n- `taskId`: ID of the task to retrieve."
      }
    },
    {
      "name": "Create Task",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"New Task\",\n  \"description\": \"Task description\",\n  \"status\": \"To Do\",\n  \"dueDate\": \"2024-12-31T23:59:59Z\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        },
        "description": "Creates a new task.\n\nRequest body (JSON):\n- `title`: Task title (string, required)\n- `description`: Task details (string, optional)\n- `status`: Task status (string, e.g., 'To Do')\n- `dueDate`: Due date in ISO format (optional)"
      }
    },
    {
      "name": "Update Task",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Updated Task\",\n  \"description\": \"Updated description\",\n  \"status\": \"In Progress\",\n  \"dueDate\": \"2024-12-31T23:59:59Z\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "{{taskId}}"]
        },
        "description": "Updates an existing task.\n\nPath parameter:\n- `taskId`: ID of the task to update.\n\nRequest body (JSON):\n- `title`: Updated task title (string, required)\n- `description`: Updated description (string, optional)\n- `status`: New status (string)\n- `dueDate`: Updated due date in ISO format (optional)"
      }
    },
    {
      "name": "Delete Task",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "{{taskId}}"]
        },
        "description": "Deletes a task by its ID.\n\nPath parameter:\n- `taskId`: ID of the task to delete."
      }
    }
  ]
}
